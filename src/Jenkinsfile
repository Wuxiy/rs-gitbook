env.BUILD_VERSION      = null
env.CURRENT_STAGE      = null
env.FAILED_REASON      = null
env.CURRENT_BRANCH     = null

node {
    def workspace = pwd()

    env.CURRENT_WORKSPACE_DIR = "${workspace}@script"

    print env.CURRENT_WORKSPACE_DIR

    env.BUILD_VERSION = '0.0.1'

    stage ('Check out'){
        print "Current branch is ${env.CURRENT_BRANCH}"

        try{
            git  url: "http://gitlab.cechealth.cn/bigdata-platform/dev-doc.git", credentialsId: "cec-gitlab", branch: "master"
        }catch(e){
            env.CURRENT_STAGE = '拉取GIT代码'
            env.FAILED_REASON = e
            throw e
        }
    }

    stage ('Build'){
        try{
            docker.image('node').inside(' -v /etc/hosts:/etc/hosts -v /opt/local/node_modules:/usr/local/lib/node_modules --entrypoint "" ') {
                sh 'npm config set registry https://registry.npm.taobao.org'
                sh 'npm install gitbook-cli -g'
                sh 'gitbook install'
                sh 'gitbook build'
                sh 'rm -f *.tar'
                sh 'tar -cvf _book.tar _book/*'
            }
        }catch(e){
            env.CURRENT_STAGE = '编译代码'
            env.FAILED_REASON = e
            throw e
        }
    }

    stage 'Build docker image and push to registry'
        sh 'cp src/Dockerfile Dockerfile'
        //sh 'cp *.tar .'
        sh 'cp src/nginx.conf .'
        def dockerImageCore = docker.build("platform/platform-etl-dev_doc:0.0.1")
        docker.withRegistry("https://harbor.cechealth.cn","cec-harbor") {
                                    dockerImageCore.push('0.0.1')
        }
        

    stage 'Redeploy docker container then restart'
        try{
          sh 'docker rm -f platform-etl-dev_doc'
        }catch(e){
            // err message
        }

        docker.image('platform/platform-etl-dev_doc:0.0.1').run('-d -p 10013:80  --name platform-etl-dev_doc')

}



def version() {
    def workspace_dir = env.CURRENT_WORKSPACE_DIR
    print workspace_dir
    def matcher = readFile(workspace_dir+'/pom.xml') =~ '<version>(.+)</version>'
    matcher ? matcher[0][1] : null
}

